Tirando em formato de Tabela

    ctrl + t

    Opção: Design da Tabela -> Converter em intervalo


Colocando em formato de Tabela

    ctrl + t

    Opção: Formatar como tabela


O que é POWER BI? 
O Power BI é uma ferramenta da MICROSOFT de análise de negócios que permite que você visualize seus dados de forma mais amigável através de criação de Dashboard

-> Power BI
-> Power APP
-> Power Automate
-> Power Virtual Agents

OLTP 
    -> Sistemas que tratam o negócio
    -> Enfase nas operações do negócio
    -> Base dos ambientes transacionais
    -> Niveis Operacional
    -> Gerenciamento concorrência

|Incluir|Atualizar|Eliminar|


OLAP
-> Sistemas que analisam o negócio
-> Base dos ambientes de Data Warehouse
-> Frequentemente faz uso de dados histórico
-> Integra dados de diferentes processos
-> Sistemas de apoio a dicisão (DSS)
-> Visão analítica do negócio
-> Consulta é a principal atividade
-> Os dados são consistentes e histórico
-> Analisam-se tedências e padrões a partir de grande quantidade de dados

|Carga|Acesso|

OLTP (Online Transaction Processing) e OLAP são sistemas de processamento de dados que se complementam para otimizar o valor dos dados. O OLTP é voltado para as operações diárias, enquanto o OLAP é voltado para análises e relatórios. 
O OLAP combina e agrupa os dados para que você possa analisá-los de diferentes pontos de vista. Por outro lado, o OLTP armazena e atualiza dados transacionais de forma confiável e eficiente em grandes volumes. Os bancos de dados do OLTP podem ser uma das várias fontes de dados de um sistema OLAP.

TABELA FATO: São tabelas que existe registros duplicados
TABELA DIMENSÃO: São tabelas que não possui registros duplicados e são registros únicos apenas


ABORDAGEM DE IMPLEMENTAÇÃO DE SOLUÇÕES DE BUSINESS INTELLIGENCE
FASE 1 - Definição do BI project Scope
FASE 2 - Identificação das fontes de dados
FASE 3 - Conversão da "Raw Data" em Right Data
FASE 4 - Criação dos Mecanismos ETL para Eliminar os modelos
FASE 5 - Modelização e Criação das Vistar
FASE 6 - Estratégia de Distribuição e difusão
FASE 7 - Avaliação da eficácia dos relatórios / reportingd


                                |ESTÁGIO DE MATURIDADE DO BI|

FASE INICIAL              |   CRESCIMENTO             |   MATURIDADE                      EXELÊNCIA
relatórios Operacionais   |   Business Intelligence   |   Análises Avançadas              Análises Preditivas e Prescritivas



-----FORMULAS EXECEL/LIBREOFFICE----
=MÉDIA(C2:C21);
=MÉDIASE(tb_rh[SEXO];"FEM";tb_rh[IDADE]);


-----FUNÇÕES POWERBI----> DAX DATA ANALYSIS EXPRESSIONS
https://learn.microsoft.com/pt-br/dax/dax-overview



EXECEL                                                                 POWER BI

FAZER UMA SOMA: SOMA                                                   SUM
FAZER A MÉDIA: MEDIA                                                   AVERAGE
CONTAR UMA COLUNA QUE TEM VALOR CONT.VALORES||CONT.NUM                 COUNTA||COUNT
VALOR LÓGICO: SE                                                       IF


-------------------------------------------------------

CÁLCULOS CUSTOMIZADOS

DADOS-> NOVA MEDIDA -> FAZER O DAX

NOME DA TABELA CRIADA = NOME DA MEDIDA(TB [COLUNA])

--------------------------------------------------------

POWER QUERY -> AMBIENTE DE TRATAMENTO DE DADOS



-------------------------------------------------------
ENTENDENDO HIRARQUIA

POWER QUERY
RELATORIO

OBS: TUDO QUE FAÇO NO POWER QUERY REFLETE NO RELÁTORIO, PORÉM NEM TUDO QUE FAÇO NO RELATÓRIO REFLETE NO POWER QUERY

_____________________________________________________________


OPÇÕES 

EXTERNA ESQUERDA (TODAS A PARTIR DA PRIMEIRA,CORRESPONDE A PARTIR DA SEGUNDA)
EXTERNA DIREITA (TODAS A PARTIR DA SEGUNDA,CORRESPONDE A PARTIR DA PRIMEIRA)


EXTERNA COMPLETA (TODAS AS LINHAS DE AMBOS)
INTERNA (APENAS LINHAS CORRESPONDENTES)

ANTI ESQUERDA (LINHAS APENAS NA PRIMAIRA)
ANTI DIREITA (LINHAS APENAS NA SEGUNDA)


-------------------------------------EXPLICAÇÃO-----------------------------

| EXTERNA ESQUERDA (TODAS A PARTIR DA PRIMEIRA,CORRESPONDE A PARTIR DA SEGUNDA) |

1. Externa Esquerda (Left Outer Join) – Todas a partir da primeira, corresponde a partir da segunda
Explicação:
Essa relação traz todas as linhas da tabela da esquerda (primeira) e as linhas correspondentes da tabela da direita (segunda). Se não houver correspondência na tabela da direita, serão preenchidas com valores nulos (NULL). Ou seja, ela garante que todas as informações da primeira tabela (esquerda) sejam mantidas, com os dados correspondentes da segunda tabela quando houver, mas sem perder nenhuma linha da primeira tabela.

Exemplo:
Se você tem uma lista de clientes (tabela da esquerda) e uma lista de pedidos (tabela da direita), essa relação traria todos os clientes, independentemente de terem ou não feito pedidos.





EXTERNA DIREITA (TODAS A PARTIR DA SEGUNDA,CORRESPONDE A PARTIR DA PRIMEIRA)
EXPLICAÇÃO:
2. Externa Direita (Left Outer Join) – Todas a partir da segunda, corresponde a partir da primeira
Explicação:
Essa é uma variação do "exterior esquerda", mas com as tabelas invertidas. Neste caso, todas as linhas da tabela da direita (segunda) são mantidas, e os dados correspondentes da tabela da esquerda (primeira) são mostrados quando encontrados. Quando não houver correspondência na tabela da esquerda, as colunas da tabela da esquerda serão preenchidas com valores nulos (NULL).

Exemplo:
Se você tem uma lista de pedidos (tabela da direita) e uma lista de clientes (tabela da esquerda), essa relação traria todos os pedidos, mesmo que não haja um cliente correspondente. Porém, as informações do cliente ficariam em branco (NULL) para pedidos sem cliente.

>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Resumo das Diferenças:
1ª Opção (Externa Esquerda – Todas a partir da primeira): Retorna todas as linhas da tabela da esquerda e apenas as correspondências da tabela da direita, preenchendo com NULL onde não há correspondência na tabela da direita.

2ª Opção (Externa Direira – Todas a partir da segunda): Retorna todas as linhas da tabela da direita e apenas as correspondências da tabela da esquerda, preenchendo com NULL onde não há correspondência na tabela da esquerda.

Em ambos os casos, a tabela da direita é a tabela que tem valores nulos quando não há correspondência, mas as ordens das tabelas na relação alteram o comportamento da consulta.
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>


EXTERNA COMPLETA (TODAS AS LINHAS DE AMBOS)
EXPLICAÇÃO:
3. Externa Completa (Full Outer Join) – Todas as linhas de ambos
Explicação:
Com essa relação, o Power BI trará todas as linhas de ambas as tabelas, independentemente de existirem ou não correspondências. Quando não houver correspondência, os valores da tabela que não tem dados correspondentes serão preenchidos com valores nulos (NULL). Ou seja, você mantém todos os dados de ambas as tabelas.

Exemplo:
Se você tem uma lista de clientes (tabela da esquerda) e uma lista de pedidos (tabela da direita), essa relação traria todos os clientes e todos os pedidos, inclusive aqueles clientes sem pedidos e aqueles pedidos sem clientes.




INTERNA (APENAS LINHAS CORRESPONDENTES)
EXPLICAÇÃO:
4. Interna (Inner Join) – Apenas linhas correspondentes
Explicação:
Essa relação trará apenas as linhas que têm correspondência entre as duas tabelas. Ou seja, ele combina os dados das duas tabelas apenas quando existe um valor correspondente na chave de ambas. Caso contrário, as linhas são descartadas. Esse tipo de relacionamento é útil quando você deseja analisar apenas os dados que existem em ambas as tabelas.

Exemplo:
Se você tem uma lista de clientes (tabela da esquerda) e uma lista de pedidos (tabela da direita), a relação interna traria apenas os clientes que fizeram pedidos, descartando os clientes sem pedidos e os pedidos sem cliente.





ANTI ESQUERDA (LINHAS APENAS NA PRIMAIRA)
EXPLICAÇÃO:
5. Anti Esquerda (Left Anti Join) – Linhas apenas na primeira
Explicação:
Esse tipo de relação retorna apenas as linhas da tabela da esquerda (primeira) que não têm correspondência na tabela da direita (segunda). Ou seja, ele retorna as linhas da tabela da esquerda que não têm correspondência na tabela da direita, filtrando tudo o que tem correspondência. É útil para encontrar registros exclusivos de uma tabela.

Exemplo:
Se você tem uma lista de clientes (tabela da esquerda) e uma lista de pedidos (tabela da direita), a relação anti esquerda traria apenas os clientes que não fizeram pedidos.





ANTI DIREITA (LINHAS APENAS NA SEGUNDA)
EXPLICAÇÃO:
6. Anti Direita (Right Anti Join) – Linhas apenas na segunda
Explicação:
Semelhante ao anti esquerda, mas neste caso, ele retorna apenas as linhas da tabela da direita (segunda) que não têm correspondência na tabela da esquerda (primeira). Ou seja, ele filtra todos os registros da tabela da direita que não possuem correspondência na tabela da esquerda. Esse tipo de relação é útil para encontrar registros exclusivos de uma tabela.

Exemplo:
Se você tem uma lista de pedidos (tabela da direita) e uma lista de clientes (tabela da esquerda), a relação anti direita traria apenas os pedidos que não têm um cliente correspondente.




===============PYTHON NO POWERBI====================
Para conferir se já temos instalado e configurado o Python no PowerBI,  iremos verificar dentro da plataforma do powerBI se o caminha está reconhecido e setado:

Arquivos->Opções e Configuração-> Opção -> Scripts do Python -> Verifique a caixa Diretórios base do Python detectados

Caso não esteje deveremos instalar o python (https://www.python.org), com o powerBI fechado e depois verificar novamente!

Depois iremos instalar a biblioteca chamada : matplotlib

Abriremos o cmd: py -m pip install matplotlib
Caso queira atualizar a biblioteca para ultima versão... Somente executar esse comando depois de ter instalado : python.exe -m pip install --upgrade pip

Tudo pronto para começar a trabalhar ... Lembrando que podemos instalar também a biblioteca panda que é muito bom! 

Somente executar esse comando no cmd

pip install pandas


Também existe mais essa biblioteca muito usado seaborn

py -m pip install seaborn

Tudo certo!

==========================================================================================

DIFERENÇAS 

ANALISTA DE NEGÓCIO: Resposável por conhecer o negócio como um todo, possui olhar analítico, utiliza as ferramentas de análises de dados como usuário final
ANALISTA DE DADOS: Responsável em montar a estrutura de dados (Arquitetura de dados), possui conhecimento nas ferramentas de BI, mas conhece mais a fundo os processos de ETL, Insights, resposável em montara arquitetura com um todo para manipular os dados (Infraestrutura)
ANALISTA BI: Possui um pergil de desenvolvimento, resposável em colocar a mão na massa para desenvolver as análises , possui conhecimento técnico e prático em ferramentas como: PowerBI, Tableu, SQLSERVER, Python, Pentaho, Integration Services, Excel entre outras. Resposável por montar as análises e distribuir para as áreas para tomadas de decisão. Possuí conhecimento mais básicos sobre o negócio
ANALISTA DE SISTEMA: É o Responsável pela coleta de regra de negócio, dos requisitos que o sistema deverá conter. Deverá indicar a melhor forma de desenvolvimento (Linguagem a ser usada). Verificar requisitos funcionais e não funcionais

===========================================================================================

FUNÇÕES DAX -> Utilizada apenas no relatório/dashboard
LINGUAGEM M -> Utilizada apenas no powerquery


